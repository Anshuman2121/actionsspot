name: 🧪 Simple Runner Test

on:
  workflow_dispatch:
    inputs:
      message:
        description: 'Test message'
        required: false
        default: 'Testing runner scaling'
        type: string
  
  # Test on push to main branch
  push:
    branches: [ main, master ]
  
  # Test on PRs
  pull_request:
    branches: [ main, master ]

jobs:
  # Simple test to verify runner works
  simple-test:
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 10
    
    steps:
      - name: 🏁 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📋 Runner Information
        run: |
          echo "🤖 Runner Details:"
          echo "Runner Name: $RUNNER_NAME"
          echo "Runner OS: $RUNNER_OS" 
          echo "Runner Arch: $RUNNER_ARCH"
          echo "Workflow: $GITHUB_WORKFLOW"
          echo "Job: $GITHUB_JOB"
          echo "Message: ${{ github.event.inputs.message || 'Auto-triggered test' }}"
          echo ""
          
      - name: 🖥️ System Check
        run: |
          echo "💻 System Information:"
          uname -a
          echo ""
          echo "🧠 Memory:"
          free -h
          echo ""
          echo "💾 Disk Space:"
          df -h /
          echo ""
          echo "🕐 Current Time:"
          date
          
      - name: ⚡ Quick Performance Test
        run: |
          echo "🚀 Running quick performance test..."
          
          # CPU test
          echo "Testing CPU..."
          time echo "scale=1000; 4*a(1)" | bc -l > /dev/null
          
          # Memory test  
          echo "Testing memory allocation..."
          python3 -c "
          import time
          data = [i for i in range(100000)]
          print(f'Created list with {len(data)} items')
          time.sleep(2)
          print('Memory test completed')
          "
          
          echo "✅ Performance test completed!"

  # Test that triggers parallel jobs (tests scaling)
  parallel-test:
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 5
    strategy:
      matrix:
        job_number: [1, 2, 3]
    
    steps:
      - name: 🔀 Parallel Job ${{ matrix.job_number }}
        run: |
          echo "🚀 Running parallel job ${{ matrix.job_number }}"
          echo "Runner: $RUNNER_NAME"
          echo "Start time: $(date)"
          
          # Simulate different workload durations
          case ${{ matrix.job_number }} in
            1)
              echo "📦 Quick job (30s)..."
              sleep 30
              ;;
            2)
              echo "🧪 Medium job (60s)..."
              sleep 60
              ;;
            3)
              echo "🔍 Long job (90s)..."
              sleep 90
              ;;
          esac
          
          echo "✅ Job ${{ matrix.job_number }} completed at $(date)"

  # Verification job that runs after others
  verify-scaling:
    needs: [simple-test, parallel-test]
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 5
    
    steps:
      - name: ✅ Scaling Test Results
        run: |
          echo "🎉 All tests completed successfully!"
          echo ""
          echo "📊 Test Summary:"
          echo "- Simple test: ✅ PASSED"
          echo "- Parallel test: ✅ PASSED"
          echo "- Runner scaling: ✅ VERIFIED"
          echo ""
          echo "🤖 This runner handled the workload successfully"
          echo "🚀 Lambda scaling appears to be working correctly"
          echo ""
          echo "Final check time: $(date)" 